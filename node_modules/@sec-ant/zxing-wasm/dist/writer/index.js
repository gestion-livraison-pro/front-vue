import { g as Mn, w as Hn, c as j } from "../core-5eb9bd55.js";
import { Z as zn, b as Gn, d as Kn, p as Jn, s as Qn } from "../core-5eb9bd55.js";
var Gr = (() => {
  var I = import.meta.url;
  return function(K = {}) {
    var u = K, J, M;
    u.ready = new Promise((r, e) => {
      J = r, M = e;
    });
    var Q = Object.assign({}, u), Y = typeof window == "object", rr = typeof importScripts == "function";
    typeof process == "object" && typeof process.versions == "object" && process.versions.node;
    var R = "";
    function Kr(r) {
      return u.locateFile ? u.locateFile(r, R) : R + r;
    }
    var lr;
    (Y || rr) && (rr ? R = self.location.href : typeof document < "u" && document.currentScript && (R = document.currentScript.src), I && (R = I), R.indexOf("blob:") !== 0 ? R = R.substr(0, R.replace(/[?#].*/, "").lastIndexOf("/") + 1) : R = "", rr && (lr = (r) => {
      var e = new XMLHttpRequest();
      return e.open("GET", r, !1), e.responseType = "arraybuffer", e.send(null), new Uint8Array(e.response);
    })), u.print || console.log.bind(console);
    var N = u.printErr || console.error.bind(console);
    Object.assign(u, Q), Q = null, u.arguments && u.arguments, u.thisProgram && u.thisProgram, u.quit && u.quit;
    var X;
    u.wasmBinary && (X = u.wasmBinary), u.noExitRuntime, typeof WebAssembly != "object" && tr("no native wasm support detected");
    var er, g, yr = !1, U, w, H, nr, S, h, mr, br;
    function wr() {
      var r = er.buffer;
      u.HEAP8 = U = new Int8Array(r), u.HEAP16 = H = new Int16Array(r), u.HEAP32 = S = new Int32Array(r), u.HEAPU8 = w = new Uint8Array(r), u.HEAPU16 = nr = new Uint16Array(r), u.HEAPU32 = h = new Uint32Array(r), u.HEAPF32 = mr = new Float32Array(r), u.HEAPF64 = br = new Float64Array(r);
    }
    var Ar, Tr = [], $r = [], Er = [];
    function Jr() {
      if (u.preRun)
        for (typeof u.preRun == "function" && (u.preRun = [u.preRun]); u.preRun.length; )
          re(u.preRun.shift());
      vr(Tr);
    }
    function Qr() {
      vr($r);
    }
    function Yr() {
      if (u.postRun)
        for (typeof u.postRun == "function" && (u.postRun = [u.postRun]); u.postRun.length; )
          ne(u.postRun.shift());
      vr(Er);
    }
    function re(r) {
      Tr.unshift(r);
    }
    function ee(r) {
      $r.unshift(r);
    }
    function ne(r) {
      Er.unshift(r);
    }
    var W = 0, L = null;
    function te(r) {
      W++, u.monitorRunDependencies && u.monitorRunDependencies(W);
    }
    function ie(r) {
      if (W--, u.monitorRunDependencies && u.monitorRunDependencies(W), W == 0 && L) {
        var e = L;
        L = null, e();
      }
    }
    function tr(r) {
      u.onAbort && u.onAbort(r), r = "Aborted(" + r + ")", N(r), yr = !0, r += ". Build with -sASSERTIONS for more info.";
      var e = new WebAssembly.RuntimeError(r);
      throw M(e), e;
    }
    var ae = "data:application/octet-stream;base64,";
    function Rr(r) {
      return r.startsWith(ae);
    }
    var x;
    u.locateFile ? (x = "zxing_writer.wasm", Rr(x) || (x = Kr(x))) : x = new URL("/writer/zxing_writer.wasm", self.location).href;
    function Cr(r) {
      if (r == x && X)
        return new Uint8Array(X);
      if (lr)
        return lr(r);
      throw "both async and sync fetching of the wasm failed";
    }
    function oe(r) {
      return !X && (Y || rr) && typeof fetch == "function" ? fetch(r, { credentials: "same-origin" }).then((e) => {
        if (!e.ok)
          throw "failed to load wasm binary file at '" + r + "'";
        return e.arrayBuffer();
      }).catch(() => Cr(r)) : Promise.resolve().then(() => Cr(r));
    }
    function Pr(r, e, n) {
      return oe(r).then((t) => WebAssembly.instantiate(t, e)).then((t) => t).then(n, (t) => {
        N("failed to asynchronously prepare wasm: " + t), tr(t);
      });
    }
    function fe(r, e, n, t) {
      return !r && typeof WebAssembly.instantiateStreaming == "function" && !Rr(e) && typeof fetch == "function" ? fetch(e, { credentials: "same-origin" }).then((i) => {
        var a = WebAssembly.instantiateStreaming(i, n);
        return a.then(t, function(o) {
          return N("wasm streaming compile failed: " + o), N("falling back to ArrayBuffer instantiation"), Pr(e, n, t);
        });
      }) : Pr(e, n, t);
    }
    function ue() {
      var r = { a: An };
      function e(t, i) {
        var a = t.exports;
        return g = a, er = g.S, wr(), Ar = g.W, ee(g.T), ie(), a;
      }
      te();
      function n(t) {
        e(t.instance);
      }
      if (u.instantiateWasm)
        try {
          return u.instantiateWasm(r, e);
        } catch (t) {
          N("Module.instantiateWasm callback failed with error: " + t), M(t);
        }
      return fe(X, x, r, n).catch(M), {};
    }
    var vr = (r) => {
      for (; r.length > 0; )
        r.shift()(u);
    }, ir = [];
    function se(r) {
      var e = new dr(r);
      return e.get_caught() || e.set_caught(!0), e.set_rethrown(!1), ir.push(e), Xr(e.excPtr), e.get_exception_ptr();
    }
    var P = 0;
    function ce() {
      p(0, 0);
      var r = ir.pop();
      Nr(r.excPtr), P = 0;
    }
    function dr(r) {
      this.excPtr = r, this.ptr = r - 24, this.set_type = function(e) {
        h[this.ptr + 4 >> 2] = e;
      }, this.get_type = function() {
        return h[this.ptr + 4 >> 2];
      }, this.set_destructor = function(e) {
        h[this.ptr + 8 >> 2] = e;
      }, this.get_destructor = function() {
        return h[this.ptr + 8 >> 2];
      }, this.set_caught = function(e) {
        e = e ? 1 : 0, U[this.ptr + 12 >> 0] = e;
      }, this.get_caught = function() {
        return U[this.ptr + 12 >> 0] != 0;
      }, this.set_rethrown = function(e) {
        e = e ? 1 : 0, U[this.ptr + 13 >> 0] = e;
      }, this.get_rethrown = function() {
        return U[this.ptr + 13 >> 0] != 0;
      }, this.init = function(e, n) {
        this.set_adjusted_ptr(0), this.set_type(e), this.set_destructor(n);
      }, this.set_adjusted_ptr = function(e) {
        h[this.ptr + 16 >> 2] = e;
      }, this.get_adjusted_ptr = function() {
        return h[this.ptr + 16 >> 2];
      }, this.get_exception_ptr = function() {
        var e = qr(this.get_type());
        if (e)
          return h[this.excPtr >> 2];
        var n = this.get_adjusted_ptr();
        return n !== 0 ? n : this.excPtr;
      };
    }
    function le(r) {
      throw P || (P = r), P;
    }
    var hr = (r) => {
      var e = P;
      if (!e)
        return z(0), 0;
      var n = new dr(e);
      n.set_adjusted_ptr(e);
      var t = n.get_type();
      if (!t)
        return z(0), e;
      for (var i in r) {
        var a = r[i];
        if (a === 0 || a === t)
          break;
        var o = n.ptr + 16;
        if (Lr(a, t, o))
          return z(a), e;
      }
      return z(t), e;
    }, ve = () => hr([]), de = (r) => hr([r]), he = (r, e) => hr([r, e]);
    function _e() {
      var r = ir.pop();
      r || tr("no exception to throw");
      var e = r.excPtr;
      throw r.get_rethrown() || (ir.push(r), r.set_rethrown(!0), r.set_caught(!1)), P = e, P;
    }
    function pe(r, e, n) {
      var t = new dr(r);
      throw t.init(e, n), P = r, P;
    }
    var ar = {};
    function Fr(r) {
      for (; r.length; ) {
        var e = r.pop(), n = r.pop();
        n(e);
      }
    }
    function or(r) {
      return this.fromWireType(S[r >> 2]);
    }
    var V = {}, D = {}, fr = {}, kr = void 0;
    function Ur(r) {
      throw new kr(r);
    }
    function Sr(r, e, n) {
      r.forEach(function(f) {
        fr[f] = e;
      });
      function t(f) {
        var s = n(f);
        s.length !== r.length && Ur("Mismatched type converter count");
        for (var c = 0; c < r.length; ++c)
          F(r[c], s[c]);
      }
      var i = new Array(e.length), a = [], o = 0;
      e.forEach((f, s) => {
        D.hasOwnProperty(f) ? i[s] = D[f] : (a.push(f), V.hasOwnProperty(f) || (V[f] = []), V[f].push(() => {
          i[s] = D[f], ++o, o === a.length && t(i);
        }));
      }), a.length === 0 && t(i);
    }
    var ge = function(r) {
      var e = ar[r];
      delete ar[r];
      var n = e.rawConstructor, t = e.rawDestructor, i = e.fields, a = i.map((o) => o.getterReturnType).concat(i.map((o) => o.setterArgumentType));
      Sr([r], a, (o) => {
        var f = {};
        return i.forEach((s, c) => {
          var l = s.fieldName, v = o[c], d = s.getter, $ = s.getterContext, C = o[c + i.length], O = s.setter, E = s.setterContext;
          f[l] = { read: (G) => v.fromWireType(d($, G)), write: (G, gr) => {
            var cr = [];
            O(E, G, C.toWireType(cr, gr)), Fr(cr);
          } };
        }), [{ name: e.name, fromWireType: function(s) {
          var c = {};
          for (var l in f)
            c[l] = f[l].read(s);
          return t(s), c;
        }, toWireType: function(s, c) {
          for (var l in f)
            if (!(l in c))
              throw new TypeError(`Missing field: "${l}"`);
          var v = n();
          for (l in f)
            f[l].write(v, c[l]);
          return s !== null && s.push(t, v), v;
        }, argPackAdvance: 8, readValueFromPointer: or, destructorFunction: t }];
      });
    };
    function ye(r, e, n, t, i) {
    }
    function _r(r) {
      switch (r) {
        case 1:
          return 0;
        case 2:
          return 1;
        case 4:
          return 2;
        case 8:
          return 3;
        default:
          throw new TypeError(`Unknown type size: ${r}`);
      }
    }
    function me() {
      for (var r = new Array(256), e = 0; e < 256; ++e)
        r[e] = String.fromCharCode(e);
      Wr = r;
    }
    var Wr = void 0;
    function b(r) {
      for (var e = "", n = r; w[n]; )
        e += Wr[w[n++]];
      return e;
    }
    var xr = void 0;
    function A(r) {
      throw new xr(r);
    }
    function be(r, e, n = {}) {
      var t = e.name;
      if (r || A(`type "${t}" must have a positive integer typeid pointer`), D.hasOwnProperty(r)) {
        if (n.ignoreDuplicateRegistrations)
          return;
        A(`Cannot register type '${t}' twice`);
      }
      if (D[r] = e, delete fr[r], V.hasOwnProperty(r)) {
        var i = V[r];
        delete V[r], i.forEach((a) => a());
      }
    }
    function F(r, e, n = {}) {
      if (!("argPackAdvance" in e))
        throw new TypeError("registerType registeredInstance requires argPackAdvance");
      return be(r, e, n);
    }
    function we(r, e, n, t, i) {
      var a = _r(n);
      e = b(e), F(r, { name: e, fromWireType: function(o) {
        return !!o;
      }, toWireType: function(o, f) {
        return f ? t : i;
      }, argPackAdvance: 8, readValueFromPointer: function(o) {
        var f;
        if (n === 1)
          f = U;
        else if (n === 2)
          f = H;
        else if (n === 4)
          f = S;
        else
          throw new TypeError("Unknown boolean type size: " + e);
        return this.fromWireType(f[o >> a]);
      }, destructorFunction: null });
    }
    function Ae() {
      Object.assign(Dr.prototype, { get(r) {
        return this.allocated[r];
      }, has(r) {
        return this.allocated[r] !== void 0;
      }, allocate(r) {
        var e = this.freelist.pop() || this.allocated.length;
        return this.allocated[e] = r, e;
      }, free(r) {
        this.allocated[r] = void 0, this.freelist.push(r);
      } });
    }
    function Dr() {
      this.allocated = [void 0], this.freelist = [];
    }
    var T = new Dr();
    function Or(r) {
      r >= T.reserved && --T.get(r).refcount === 0 && T.free(r);
    }
    function Te() {
      for (var r = 0, e = T.reserved; e < T.allocated.length; ++e)
        T.allocated[e] !== void 0 && ++r;
      return r;
    }
    function $e() {
      T.allocated.push({ value: void 0 }, { value: null }, { value: !0 }, { value: !1 }), T.reserved = T.allocated.length, u.count_emval_handles = Te;
    }
    var B = { toValue: (r) => (r || A("Cannot use deleted val. handle = " + r), T.get(r).value), toHandle: (r) => {
      switch (r) {
        case void 0:
          return 1;
        case null:
          return 2;
        case !0:
          return 3;
        case !1:
          return 4;
        default:
          return T.allocate({ refcount: 1, value: r });
      }
    } };
    function Ee(r, e) {
      e = b(e), F(r, { name: e, fromWireType: function(n) {
        var t = B.toValue(n);
        return Or(n), t;
      }, toWireType: function(n, t) {
        return B.toHandle(t);
      }, argPackAdvance: 8, readValueFromPointer: or, destructorFunction: null });
    }
    function Re(r, e) {
      switch (e) {
        case 2:
          return function(n) {
            return this.fromWireType(mr[n >> 2]);
          };
        case 3:
          return function(n) {
            return this.fromWireType(br[n >> 3]);
          };
        default:
          throw new TypeError("Unknown float type: " + r);
      }
    }
    function Ce(r, e, n) {
      var t = _r(n);
      e = b(e), F(r, { name: e, fromWireType: function(i) {
        return i;
      }, toWireType: function(i, a) {
        return a;
      }, argPackAdvance: 8, readValueFromPointer: Re(e, t), destructorFunction: null });
    }
    var Pe = 48, Fe = 57;
    function ke(r) {
      if (r === void 0)
        return "_unknown";
      r = r.replace(/[^a-zA-Z0-9_]/g, "$");
      var e = r.charCodeAt(0);
      return e >= Pe && e <= Fe ? `_${r}` : r;
    }
    function Ue(r, e, n, t, i, a) {
      var o = e.length;
      o < 2 && A("argTypes array size mismatch! Must at least get return value and 'this' types!");
      for (var f = e[1] !== null && n !== null, s = !1, c = 1; c < e.length; ++c)
        if (e[c] !== null && e[c].destructorFunction === void 0) {
          s = !0;
          break;
        }
      var l = e[0].name !== "void", v = o - 2, d = new Array(v), $ = [], C = [];
      return function() {
        arguments.length !== v && A(`function ${r} called with ${arguments.length} arguments, expected ${v} args!`), C.length = 0;
        var O;
        $.length = f ? 2 : 1, $[0] = i, f && (O = e[1].toWireType(C, this), $[1] = O);
        for (var E = 0; E < v; ++E)
          d[E] = e[E + 2].toWireType(C, arguments[E]), $.push(d[E]);
        var G = t.apply(null, $);
        function gr(cr) {
          if (s)
            Fr(C);
          else
            for (var Z = f ? 1 : 2; Z < e.length; Z++) {
              var In = Z === 1 ? O : d[Z - 2];
              e[Z].destructorFunction !== null && e[Z].destructorFunction(In);
            }
          if (l)
            return e[0].fromWireType(cr);
        }
        return gr(G);
      };
    }
    function Se(r, e, n) {
      if (r[e].overloadTable === void 0) {
        var t = r[e];
        r[e] = function() {
          return r[e].overloadTable.hasOwnProperty(arguments.length) || A(`Function '${n}' called with an invalid number of arguments (${arguments.length}) - expects one of (${r[e].overloadTable})!`), r[e].overloadTable[arguments.length].apply(this, arguments);
        }, r[e].overloadTable = [], r[e].overloadTable[t.argCount] = t;
      }
    }
    function We(r, e, n) {
      u.hasOwnProperty(r) ? ((n === void 0 || u[r].overloadTable !== void 0 && u[r].overloadTable[n] !== void 0) && A(`Cannot register public name '${r}' twice`), Se(u, r, r), u.hasOwnProperty(n) && A(`Cannot register multiple overloads of a function with the same number of arguments (${n})!`), u[r].overloadTable[n] = e) : (u[r] = e, n !== void 0 && (u[r].numArguments = n));
    }
    function xe(r, e) {
      for (var n = [], t = 0; t < r; t++)
        n.push(h[e + t * 4 >> 2]);
      return n;
    }
    function De(r, e, n) {
      u.hasOwnProperty(r) || Ur("Replacing nonexistant public symbol"), u[r].overloadTable !== void 0 && n !== void 0 ? u[r].overloadTable[n] = e : (u[r] = e, u[r].argCount = n);
    }
    var Oe = (r, e, n) => {
      var t = u["dynCall_" + r];
      return n && n.length ? t.apply(null, [e].concat(n)) : t.call(null, e);
    }, ur = [], _ = (r) => {
      var e = ur[r];
      return e || (r >= ur.length && (ur.length = r + 1), ur[r] = e = Ar.get(r)), e;
    }, je = (r, e, n) => {
      if (r.includes("j"))
        return Oe(r, e, n);
      var t = _(e).apply(null, n);
      return t;
    }, Ie = (r, e) => {
      var n = [];
      return function() {
        return n.length = 0, Object.assign(n, arguments), je(r, e, n);
      };
    };
    function q(r, e) {
      r = b(r);
      function n() {
        return r.includes("j") ? Ie(r, e) : _(e);
      }
      var t = n();
      return typeof t != "function" && A(`unknown function pointer with signature ${r}: ${e}`), t;
    }
    function Me(r, e) {
      return r = ke(r), { [r]: function() {
        return e.apply(this, arguments);
      } }[r];
    }
    function He(r, e) {
      var n = Me(e, function(t) {
        this.name = e, this.message = t;
        var i = new Error(t).stack;
        i !== void 0 && (this.stack = this.toString() + `
` + i.replace(/^Error(:[^\n]*)?\n/, ""));
      });
      return n.prototype = Object.create(r.prototype), n.prototype.constructor = n, n.prototype.toString = function() {
        return this.message === void 0 ? this.name : `${this.name}: ${this.message}`;
      }, n;
    }
    var jr = void 0;
    function Ir(r) {
      var e = Zr(r), n = b(e);
      return k(e), n;
    }
    function Ve(r, e) {
      var n = [], t = {};
      function i(a) {
        if (!t[a] && !D[a]) {
          if (fr[a]) {
            fr[a].forEach(i);
            return;
          }
          n.push(a), t[a] = !0;
        }
      }
      throw e.forEach(i), new jr(`${r}: ` + n.map(Ir).join([", "]));
    }
    function Be(r, e, n, t, i, a, o) {
      var f = xe(e, n);
      r = b(r), i = q(t, i), We(r, function() {
        Ve(`Cannot call ${r} due to unbound types`, f);
      }, e - 1), Sr([], f, function(s) {
        var c = [s[0], null].concat(s.slice(1));
        return De(r, Ue(r, c, null, i, a), e - 1), [];
      });
    }
    function Ze(r, e, n) {
      switch (e) {
        case 0:
          return n ? function(i) {
            return U[i];
          } : function(i) {
            return w[i];
          };
        case 1:
          return n ? function(i) {
            return H[i >> 1];
          } : function(i) {
            return nr[i >> 1];
          };
        case 2:
          return n ? function(i) {
            return S[i >> 2];
          } : function(i) {
            return h[i >> 2];
          };
        default:
          throw new TypeError("Unknown integer type: " + r);
      }
    }
    function Ne(r, e, n, t, i) {
      e = b(e);
      var a = _r(n), o = (v) => v;
      if (t === 0) {
        var f = 32 - 8 * n;
        o = (v) => v << f >>> f;
      }
      var s = e.includes("unsigned"), c = (v, d) => {
      }, l;
      s ? l = function(v, d) {
        return c(d, this.name), d >>> 0;
      } : l = function(v, d) {
        return c(d, this.name), d;
      }, F(r, { name: e, fromWireType: o, toWireType: l, argPackAdvance: 8, readValueFromPointer: Ze(e, a, t !== 0), destructorFunction: null });
    }
    function Xe(r, e, n) {
      var t = [Int8Array, Uint8Array, Int16Array, Uint16Array, Int32Array, Uint32Array, Float32Array, Float64Array], i = t[e];
      function a(o) {
        o = o >> 2;
        var f = h, s = f[o], c = f[o + 1];
        return new i(f.buffer, c, s);
      }
      n = b(n), F(r, { name: n, fromWireType: a, argPackAdvance: 8, readValueFromPointer: a }, { ignoreDuplicateRegistrations: !0 });
    }
    var Le = (r, e, n, t) => {
      if (!(t > 0))
        return 0;
      for (var i = n, a = n + t - 1, o = 0; o < r.length; ++o) {
        var f = r.charCodeAt(o);
        if (f >= 55296 && f <= 57343) {
          var s = r.charCodeAt(++o);
          f = 65536 + ((f & 1023) << 10) | s & 1023;
        }
        if (f <= 127) {
          if (n >= a)
            break;
          e[n++] = f;
        } else if (f <= 2047) {
          if (n + 1 >= a)
            break;
          e[n++] = 192 | f >> 6, e[n++] = 128 | f & 63;
        } else if (f <= 65535) {
          if (n + 2 >= a)
            break;
          e[n++] = 224 | f >> 12, e[n++] = 128 | f >> 6 & 63, e[n++] = 128 | f & 63;
        } else {
          if (n + 3 >= a)
            break;
          e[n++] = 240 | f >> 18, e[n++] = 128 | f >> 12 & 63, e[n++] = 128 | f >> 6 & 63, e[n++] = 128 | f & 63;
        }
      }
      return e[n] = 0, n - i;
    }, qe = (r, e, n) => Le(r, w, e, n), ze = (r) => {
      for (var e = 0, n = 0; n < r.length; ++n) {
        var t = r.charCodeAt(n);
        t <= 127 ? e++ : t <= 2047 ? e += 2 : t >= 55296 && t <= 57343 ? (e += 4, ++n) : e += 3;
      }
      return e;
    }, Mr = typeof TextDecoder < "u" ? new TextDecoder("utf8") : void 0, Ge = (r, e, n) => {
      for (var t = e + n, i = e; r[i] && !(i >= t); )
        ++i;
      if (i - e > 16 && r.buffer && Mr)
        return Mr.decode(r.subarray(e, i));
      for (var a = ""; e < i; ) {
        var o = r[e++];
        if (!(o & 128)) {
          a += String.fromCharCode(o);
          continue;
        }
        var f = r[e++] & 63;
        if ((o & 224) == 192) {
          a += String.fromCharCode((o & 31) << 6 | f);
          continue;
        }
        var s = r[e++] & 63;
        if ((o & 240) == 224 ? o = (o & 15) << 12 | f << 6 | s : o = (o & 7) << 18 | f << 12 | s << 6 | r[e++] & 63, o < 65536)
          a += String.fromCharCode(o);
        else {
          var c = o - 65536;
          a += String.fromCharCode(55296 | c >> 10, 56320 | c & 1023);
        }
      }
      return a;
    }, Ke = (r, e) => r ? Ge(w, r, e) : "";
    function Je(r, e) {
      e = b(e);
      var n = e === "std::string";
      F(r, { name: e, fromWireType: function(t) {
        var i = h[t >> 2], a = t + 4, o;
        if (n)
          for (var f = a, s = 0; s <= i; ++s) {
            var c = a + s;
            if (s == i || w[c] == 0) {
              var l = c - f, v = Ke(f, l);
              o === void 0 ? o = v : (o += String.fromCharCode(0), o += v), f = c + 1;
            }
          }
        else {
          for (var d = new Array(i), s = 0; s < i; ++s)
            d[s] = String.fromCharCode(w[a + s]);
          o = d.join("");
        }
        return k(t), o;
      }, toWireType: function(t, i) {
        i instanceof ArrayBuffer && (i = new Uint8Array(i));
        var a, o = typeof i == "string";
        o || i instanceof Uint8Array || i instanceof Uint8ClampedArray || i instanceof Int8Array || A("Cannot pass non-string to std::string"), n && o ? a = ze(i) : a = i.length;
        var f = pr(4 + a + 1), s = f + 4;
        if (h[f >> 2] = a, n && o)
          qe(i, s, a + 1);
        else if (o)
          for (var c = 0; c < a; ++c) {
            var l = i.charCodeAt(c);
            l > 255 && (k(s), A("String has UTF-16 code units that do not fit in 8 bits")), w[s + c] = l;
          }
        else
          for (var c = 0; c < a; ++c)
            w[s + c] = i[c];
        return t !== null && t.push(k, f), f;
      }, argPackAdvance: 8, readValueFromPointer: or, destructorFunction: function(t) {
        k(t);
      } });
    }
    var Hr = typeof TextDecoder < "u" ? new TextDecoder("utf-16le") : void 0, Qe = (r, e) => {
      for (var n = r, t = n >> 1, i = t + e / 2; !(t >= i) && nr[t]; )
        ++t;
      if (n = t << 1, n - r > 32 && Hr)
        return Hr.decode(w.subarray(r, n));
      for (var a = "", o = 0; !(o >= e / 2); ++o) {
        var f = H[r + o * 2 >> 1];
        if (f == 0)
          break;
        a += String.fromCharCode(f);
      }
      return a;
    }, Ye = (r, e, n) => {
      if (n === void 0 && (n = 2147483647), n < 2)
        return 0;
      n -= 2;
      for (var t = e, i = n < r.length * 2 ? n / 2 : r.length, a = 0; a < i; ++a) {
        var o = r.charCodeAt(a);
        H[e >> 1] = o, e += 2;
      }
      return H[e >> 1] = 0, e - t;
    }, rn = (r) => r.length * 2, en = (r, e) => {
      for (var n = 0, t = ""; !(n >= e / 4); ) {
        var i = S[r + n * 4 >> 2];
        if (i == 0)
          break;
        if (++n, i >= 65536) {
          var a = i - 65536;
          t += String.fromCharCode(55296 | a >> 10, 56320 | a & 1023);
        } else
          t += String.fromCharCode(i);
      }
      return t;
    }, nn = (r, e, n) => {
      if (n === void 0 && (n = 2147483647), n < 4)
        return 0;
      for (var t = e, i = t + n - 4, a = 0; a < r.length; ++a) {
        var o = r.charCodeAt(a);
        if (o >= 55296 && o <= 57343) {
          var f = r.charCodeAt(++a);
          o = 65536 + ((o & 1023) << 10) | f & 1023;
        }
        if (S[e >> 2] = o, e += 4, e + 4 > i)
          break;
      }
      return S[e >> 2] = 0, e - t;
    }, tn = (r) => {
      for (var e = 0, n = 0; n < r.length; ++n) {
        var t = r.charCodeAt(n);
        t >= 55296 && t <= 57343 && ++n, e += 4;
      }
      return e;
    }, an = function(r, e, n) {
      n = b(n);
      var t, i, a, o, f;
      e === 2 ? (t = Qe, i = Ye, o = rn, a = () => nr, f = 1) : e === 4 && (t = en, i = nn, o = tn, a = () => h, f = 2), F(r, { name: n, fromWireType: function(s) {
        for (var c = h[s >> 2], l = a(), v, d = s + 4, $ = 0; $ <= c; ++$) {
          var C = s + 4 + $ * e;
          if ($ == c || l[C >> f] == 0) {
            var O = C - d, E = t(d, O);
            v === void 0 ? v = E : (v += String.fromCharCode(0), v += E), d = C + e;
          }
        }
        return k(s), v;
      }, toWireType: function(s, c) {
        typeof c != "string" && A(`Cannot pass non-string to C++ string type ${n}`);
        var l = o(c), v = pr(4 + l + e);
        return h[v >> 2] = l >> f, i(c, v + 4, l + e), s !== null && s.push(k, v), v;
      }, argPackAdvance: 8, readValueFromPointer: or, destructorFunction: function(s) {
        k(s);
      } });
    };
    function on(r, e, n, t, i, a) {
      ar[r] = { name: b(e), rawConstructor: q(n, t), rawDestructor: q(i, a), fields: [] };
    }
    function fn(r, e, n, t, i, a, o, f, s, c) {
      ar[r].fields.push({ fieldName: b(e), getterReturnType: n, getter: q(t, i), getterContext: a, setterArgumentType: o, setter: q(f, s), setterContext: c });
    }
    function un(r, e) {
      e = b(e), F(r, { isVoid: !0, name: e, argPackAdvance: 0, fromWireType: function() {
      }, toWireType: function(n, t) {
      } });
    }
    var sn = {};
    function cn(r) {
      var e = sn[r];
      return e === void 0 ? b(r) : e;
    }
    function Vr() {
      if (typeof globalThis == "object")
        return globalThis;
      function r(e) {
        e.$$$embind_global$$$ = e;
        var n = typeof $$$embind_global$$$ == "object" && e.$$$embind_global$$$ == e;
        return n || delete e.$$$embind_global$$$, n;
      }
      if (typeof $$$embind_global$$$ == "object" || (typeof global == "object" && r(global) ? $$$embind_global$$$ = global : typeof self == "object" && r(self) && ($$$embind_global$$$ = self), typeof $$$embind_global$$$ == "object"))
        return $$$embind_global$$$;
      throw Error("unable to get global object.");
    }
    function ln(r) {
      return r === 0 ? B.toHandle(Vr()) : (r = cn(r), B.toHandle(Vr()[r]));
    }
    function vn(r) {
      r > 4 && (T.get(r).refcount += 1);
    }
    function dn(r, e) {
      var n = D[r];
      return n === void 0 && A(e + " has unknown type " + Ir(r)), n;
    }
    function hn(r) {
      var e = new Array(r + 1);
      return function(n, t, i) {
        e[0] = n;
        for (var a = 0; a < r; ++a) {
          var o = dn(h[t + a * 4 >> 2], "parameter " + a);
          e[a + 1] = o.readValueFromPointer(i), i += o.argPackAdvance;
        }
        var f = new (n.bind.apply(n, e))();
        return B.toHandle(f);
      };
    }
    var Br = {};
    function _n(r, e, n, t) {
      r = B.toValue(r);
      var i = Br[e];
      return i || (i = hn(e), Br[e] = i), i(r, n, t);
    }
    var pn = () => {
      tr("");
    }, gn = (r, e, n) => w.copyWithin(r, e, e + n), yn = () => 2147483648, mn = (r) => {
      var e = er.buffer, n = r - e.byteLength + 65535 >>> 16;
      try {
        return er.grow(n), wr(), 1;
      } catch {
      }
    }, bn = (r) => {
      var e = w.length;
      r >>>= 0;
      var n = yn();
      if (r > n)
        return !1;
      for (var t = (s, c) => s + (c - s % c) % c, i = 1; i <= 4; i *= 2) {
        var a = e * (1 + 0.2 / i);
        a = Math.min(a, r + 100663296);
        var o = Math.min(n, t(Math.max(r, a), 65536)), f = mn(o);
        if (f)
          return !0;
      }
      return !1;
    };
    function wn(r) {
      return r;
    }
    kr = u.InternalError = class extends Error {
      constructor(e) {
        super(e), this.name = "InternalError";
      }
    }, me(), xr = u.BindingError = class extends Error {
      constructor(e) {
        super(e), this.name = "BindingError";
      }
    }, Ae(), $e(), jr = u.UnboundTypeError = He(Error, "UnboundTypeError");
    var An = { v: se, u: ce, a: ve, k: de, s: he, M: _e, m: pe, f: le, O: ge, E: ye, I: we, H: Ee, z: Ce, N: Be, r: Ne, p: Xe, y: Je, w: an, Q: on, P: fn, J: un, K: Or, D: ln, B: vn, C: _n, x: pn, G: gn, F: bn, t: On, b: Tn, e: Pn, l: xn, h: Cn, j: jn, L: Dn, i: Fn, d: $n, g: Wn, c: Sn, o: Rn, n: En, q: Un, A: kn, R: wn };
    ue();
    var pr = u._malloc = (r) => (pr = u._malloc = g.U)(r), k = u._free = (r) => (k = u._free = g.V)(r), Zr = (r) => (Zr = g.X)(r);
    u.__embind_initialize_bindings = () => (u.__embind_initialize_bindings = g.Y)();
    var p = (r, e) => (p = g.Z)(r, e), z = (r) => (z = g._)(r), y = () => (y = g.$)(), m = (r) => (m = g.aa)(r), Nr = (r) => (Nr = g.ba)(r), Xr = (r) => (Xr = g.ca)(r), Lr = (r, e, n) => (Lr = g.da)(r, e, n), qr = (r) => (qr = g.ea)(r);
    function Tn(r, e) {
      var n = y();
      try {
        return _(r)(e);
      } catch (t) {
        if (m(n), t !== t + 0)
          throw t;
        p(1, 0);
      }
    }
    function $n(r, e) {
      var n = y();
      try {
        _(r)(e);
      } catch (t) {
        if (m(n), t !== t + 0)
          throw t;
        p(1, 0);
      }
    }
    function En(r, e, n, t, i, a) {
      var o = y();
      try {
        _(r)(e, n, t, i, a);
      } catch (f) {
        if (m(o), f !== f + 0)
          throw f;
        p(1, 0);
      }
    }
    function Rn(r, e, n, t, i) {
      var a = y();
      try {
        _(r)(e, n, t, i);
      } catch (o) {
        if (m(a), o !== o + 0)
          throw o;
        p(1, 0);
      }
    }
    function Cn(r, e, n, t, i) {
      var a = y();
      try {
        return _(r)(e, n, t, i);
      } catch (o) {
        if (m(a), o !== o + 0)
          throw o;
        p(1, 0);
      }
    }
    function Pn(r, e, n) {
      var t = y();
      try {
        return _(r)(e, n);
      } catch (i) {
        if (m(t), i !== i + 0)
          throw i;
        p(1, 0);
      }
    }
    function Fn(r) {
      var e = y();
      try {
        _(r)();
      } catch (n) {
        if (m(e), n !== n + 0)
          throw n;
        p(1, 0);
      }
    }
    function kn(r, e, n, t, i, a, o, f, s, c, l) {
      var v = y();
      try {
        _(r)(e, n, t, i, a, o, f, s, c, l);
      } catch (d) {
        if (m(v), d !== d + 0)
          throw d;
        p(1, 0);
      }
    }
    function Un(r, e, n, t, i, a, o, f, s) {
      var c = y();
      try {
        _(r)(e, n, t, i, a, o, f, s);
      } catch (l) {
        if (m(c), l !== l + 0)
          throw l;
        p(1, 0);
      }
    }
    function Sn(r, e, n, t) {
      var i = y();
      try {
        _(r)(e, n, t);
      } catch (a) {
        if (m(i), a !== a + 0)
          throw a;
        p(1, 0);
      }
    }
    function Wn(r, e, n) {
      var t = y();
      try {
        _(r)(e, n);
      } catch (i) {
        if (m(t), i !== i + 0)
          throw i;
        p(1, 0);
      }
    }
    function xn(r, e, n, t) {
      var i = y();
      try {
        return _(r)(e, n, t);
      } catch (a) {
        if (m(i), a !== a + 0)
          throw a;
        p(1, 0);
      }
    }
    function Dn(r, e, n, t, i, a, o) {
      var f = y();
      try {
        return _(r)(e, n, t, i, a, o);
      } catch (s) {
        if (m(f), s !== s + 0)
          throw s;
        p(1, 0);
      }
    }
    function On(r) {
      var e = y();
      try {
        return _(r)();
      } catch (n) {
        if (m(e), n !== n + 0)
          throw n;
        p(1, 0);
      }
    }
    function jn(r, e, n, t, i, a) {
      var o = y();
      try {
        return _(r)(e, n, t, i, a);
      } catch (f) {
        if (m(o), f !== f + 0)
          throw f;
        p(1, 0);
      }
    }
    var sr;
    L = function r() {
      sr || zr(), sr || (L = r);
    };
    function zr() {
      if (W > 0 || (Jr(), W > 0))
        return;
      function r() {
        sr || (sr = !0, u.calledRun = !0, !yr && (Qr(), J(u), u.onRuntimeInitialized && u.onRuntimeInitialized(), Yr()));
      }
      u.setStatus ? (u.setStatus("Running..."), setTimeout(function() {
        setTimeout(function() {
          u.setStatus("");
        }, 1), r();
      }, 1)) : r();
    }
    if (u.preInit)
      for (typeof u.preInit == "function" && (u.preInit = [u.preInit]); u.preInit.length > 0; )
        u.preInit.pop()();
    return zr(), K.ready;
  };
})();
function Nn(I) {
  return Mn(Gr, I);
}
async function Xn(I, {
  format: K = j.format,
  charset: u = j.charset,
  quietZone: J = j.quietZone,
  width: M = j.width,
  height: Q = j.height,
  eccLevel: Y = j.eccLevel
} = j) {
  return Hn(
    I,
    {
      format: K,
      charset: u,
      quietZone: J,
      width: M,
      height: Q,
      eccLevel: Y
    },
    Gr
  );
}
export {
  zn as ZXING_BARCODE_FORMAT_NAMES,
  Gn as ZXING_CHARACTOR_SET_NAMES,
  Kn as defaultZXingReadOptions,
  j as defaultZXingWriteOptions,
  Nn as getZXingModule,
  Jn as purgeZXingModule,
  Qn as setZXingModuleOverrides,
  Xn as writeBarcodeToImageFile
};
